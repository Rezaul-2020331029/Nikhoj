/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MockRouteImport } from './routes/mock'
import { Route as GuestRouteImport } from './routes/_guest'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as GuestIndexRouteImport } from './routes/_guest/index'
import { Route as GuestSignupRouteImport } from './routes/_guest/signup'
import { Route as GuestLoginRouteImport } from './routes/_guest/login'
import { Route as AuthHomeRouteImport } from './routes/_auth/home'
import { Route as AuthSimilarityPostIdRouteImport } from './routes/_auth/similarity.$postId'

const MockRoute = MockRouteImport.update({
  id: '/mock',
  path: '/mock',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestIndexRoute = GuestIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRoute,
} as any)
const GuestSignupRoute = GuestSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => GuestRoute,
} as any)
const GuestLoginRoute = GuestLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)
const AuthHomeRoute = AuthHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSimilarityPostIdRoute = AuthSimilarityPostIdRouteImport.update({
  id: '/similarity/$postId',
  path: '/similarity/$postId',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/mock': typeof MockRoute
  '/home': typeof AuthHomeRoute
  '/login': typeof GuestLoginRoute
  '/signup': typeof GuestSignupRoute
  '/': typeof GuestIndexRoute
  '/similarity/$postId': typeof AuthSimilarityPostIdRoute
}
export interface FileRoutesByTo {
  '/mock': typeof MockRoute
  '/home': typeof AuthHomeRoute
  '/login': typeof GuestLoginRoute
  '/signup': typeof GuestSignupRoute
  '/': typeof GuestIndexRoute
  '/similarity/$postId': typeof AuthSimilarityPostIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/mock': typeof MockRoute
  '/_auth/home': typeof AuthHomeRoute
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/signup': typeof GuestSignupRoute
  '/_guest/': typeof GuestIndexRoute
  '/_auth/similarity/$postId': typeof AuthSimilarityPostIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/mock'
    | '/home'
    | '/login'
    | '/signup'
    | '/'
    | '/similarity/$postId'
  fileRoutesByTo: FileRoutesByTo
  to: '/mock' | '/home' | '/login' | '/signup' | '/' | '/similarity/$postId'
  id:
    | '__root__'
    | '/_auth'
    | '/_guest'
    | '/mock'
    | '/_auth/home'
    | '/_guest/login'
    | '/_guest/signup'
    | '/_guest/'
    | '/_auth/similarity/$postId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
  MockRoute: typeof MockRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/mock': {
      id: '/mock'
      path: '/mock'
      fullPath: '/mock'
      preLoaderRoute: typeof MockRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/signup': {
      id: '/_guest/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof GuestSignupRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/similarity/$postId': {
      id: '/_auth/similarity/$postId'
      path: '/similarity/$postId'
      fullPath: '/similarity/$postId'
      preLoaderRoute: typeof AuthSimilarityPostIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthHomeRoute: typeof AuthHomeRoute
  AuthSimilarityPostIdRoute: typeof AuthSimilarityPostIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthHomeRoute: AuthHomeRoute,
  AuthSimilarityPostIdRoute: AuthSimilarityPostIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface GuestRouteChildren {
  GuestLoginRoute: typeof GuestLoginRoute
  GuestSignupRoute: typeof GuestSignupRoute
  GuestIndexRoute: typeof GuestIndexRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestLoginRoute: GuestLoginRoute,
  GuestSignupRoute: GuestSignupRoute,
  GuestIndexRoute: GuestIndexRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
  MockRoute: MockRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
